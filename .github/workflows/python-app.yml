# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

# name: Python application

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# permissions:
#   contents: read

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v4
#     - name: Set up Python 3.11
#       uses: actions/setup-python@v3
#       with:
#         python-version: "3.11"
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         if [ -f requirements.txt ]; then make install; fi
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#     - name: isort script
#       run: |
#         isort calculator.py
#     - name: Test with pytest
#       run: |
#         make test

name: Docker build and push
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: docker login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - name: Set up Python 3.11
      uses: actions/setup-python@v1 
      with:
        python-version: 3.11
    - name: Install dependencies
      run: | 
        make install
    - name: Test
      run: |
        make test
    - name: docker build
      run: |
        docker build -t lasse1990/hello_world_test:0.0.1 .
    - name: docker push
      run: |
        docker push lasse1990/hello_world_test:0.0.1